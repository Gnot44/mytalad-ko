// functions/notifyLine.js - р╣Гр╕Кр╣Й Firebase Secret р╕нр╕вр╣Ир╕▓р╕Зр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в
const { onDocumentCreated } = require('firebase-functions/v2/firestore');
const { defineSecret } = require('firebase-functions/params');
const admin = require('firebase-admin');
const axios = require('axios');

const db = admin.firestore();

// тЬЕ р╣Вр╕лр╕ер╕Ф Secret р╕Ир╕▓р╕Б Firebase
const LINE_TOKEN = defineSecret('LINE_TOKEN');
const LINE_USER_ID = defineSecret('LINE_USER_ID');

exports.notifyLineOnDelivery = onDocumentCreated(
  { document: 'deliveryData/{deliveryId}', secrets: [LINE_TOKEN, LINE_USER_ID] },
  async (event) => {
    const data = event.data.data();
    const deliveryId = event.params.deliveryId;

    const message = generateLineMessage(data, deliveryId);

    try {
      await axios.post(
        'https://api.line.me/v2/bot/message/push',
        {
          to: LINE_USER_ID.value(),
          messages: [
            { type: 'text', text: message },
          ],
        },
        {
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${LINE_TOKEN.value()}`,
          },
        }
      );

      console.log(`ЁЯУ▓ р╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ LINE р╕кр╕│р╣Ар╕гр╣Зр╕И: ${deliveryId}`);
    } catch (error) {
      console.error('тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕З LINE р╣Др╕Фр╣Й:', error);
    }
  }
);

function generateLineMessage(data, deliveryId) {
  const itemLines = data.cart.map((item, i) => `#${i + 1} ${item.title} x${item.quantity}`).join('\n');
  return `ЁЯУж р╕нр╕нр╣Ар╕Фр╕нр╕гр╣Мр╣Гр╕лр╕бр╣И!

р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╕кр╕▒р╣Ир╕З: ${data.nameOrder || '-'}\nр╣Ар╕ер╕Вр╕нр╕нр╣Ар╕Фр╕нр╕гр╣М: ${deliveryId}\nр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕кр╣Ир╕З: ${data.deliveryLocation || '-'}\nр╕гр╕▓р╕вр╕Бр╕▓р╕г:\n${itemLines}\nЁЯТ░ р╕гр╕зр╕б: ${data.totalPrice} р╕Ър╕▓р╕Ч`;
}
